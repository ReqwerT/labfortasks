---
- name: Prepare PowerShell + BAT scripts to launch QEMU VMs via GUI
  hosts: win
  gather_facts: no
  tasks:

    - name: Ensure PowerShell script directory exists
      win_file:
        path: "C:\\vagrant_vm_boot"
        state: directory

    - name: Create PowerShell script to boot VM with two VMDK disks
      win_copy:
        content: |
          $qemuPath = "C:\Program Files\qemu"
          $diskPrimary = "D:\disk.vmdk"
          $diskExtra = "D:\disk1.vmdk"
          $logFile = "C:\vagrant_vm_boot\log_boot.txt"

          try {
              Add-Content $logFile "`nLaunching QEMU VM at $(Get-Date)`n"

              & "$qemuPath\qemu-system-x86_64.exe" `
                  -accel whpx `
                  -m 4096 `
                  -smp 2 `
                  -drive file="$diskPrimary",format=vmdk,if=virtio,cache=writeback `
                  -drive file="$diskExtra",format=vmdk,if=virtio,cache=writeback `
                  -netdev user,id=net0,hostfwd=tcp::8080-:80 `
                  -device virtio-net-pci,netdev=net0 `
                  -boot c `
                  -vga virtio `
                  -usb -device usb-tablet `
                  -display gtk

              Add-Content $logFile "QEMU VM started successfully."
          }
          catch {
              Add-Content $logFile "ERROR starting QEMU VM: $_"
          }
        dest: "C:\\vagrant_vm_boot\\start_vm.ps1"

    - name: Create startup .bat file to run the PowerShell script
      win_copy:
        content: |
          powershell.exe -ExecutionPolicy Bypass -WindowStyle Hidden -File "C:\vagrant_vm_boot\start_vm.ps1"
        dest: "C:\\Users\\vagrant\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\start_vm.bat"
